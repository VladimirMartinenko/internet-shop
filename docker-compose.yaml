version: '3.8'
services:

  client-prod:
    # restart: always
    build:
      context: ./client
      dockerfile: Dockerfile-production
    ports:
      - "80:80"
      # - "443:443"
    # restart: unless-stopped 
    restart: always
    depends_on:
      - server-prod
    volumes:
      - server-prod:ro
      # - /var/www/html/images:/var/www/html/images
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
    # command: /bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'  
    
  certbot:  
    image: certbot/certbot:latest
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'

  server-prod:
    restart: always
    build:
      context: ./server
      dockerfile: Dockerfile-production
    environment:
      NODE_ENV: production
    ports:
      - "5000:5000"
    depends_on:
      - db-prod
    volumes:
      - /var/www/html/images:/var/www/html/images

  db-prod:
    restart: always
    image: postgres:14-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=internet_shop_db
    # ports:
    #   - "5432:5432"  
    # volumes:
    #       - data:/var/lib/postgres/data  
volumes:
  server-prod:
  nginx-server-prod:
